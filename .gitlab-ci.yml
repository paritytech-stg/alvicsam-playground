stages:
  - fmt
  - build
  - test
  - deploy

variables:
  CI_IMAGE:                        "paritytech/ci-linux:production"
  TEST_GLOBAL_VAR:                 "lalala"

default:
  image:                           $CI_IMAGE
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  interruptible:                   true
  tags:
    - testlab-docker

.test-refs:                        &test-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^some-release-v[0-9]+\.[0-9]+.*$/              # i.e. some-release-v1.0, some-release-v2.1rc1

cargo-fmt:
  stage:                           fmt
  <<:                              *test-refs
  variables:
    GIT_STRATEGY:                  none
  before_script:
    - echo PROJECT_NAME=$CI_PROJECT_NAME > fmt.env
    - echo PR_BRANCH="as-rust" >> fmt.env
  script:
    - cargo fmt --check
  artifacts:
     reports:
       dotenv: fmt.env

build-job:
  stage:                           build
  <<:                              *test-refs
  script:
    - cargo build

format-me:
  stage:                           .post
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs
      when: on_failure
  needs:
    - job: cargo-fmt
  variables:
    PROJECT_NAME:                  "${CI_PROJECT_NAME}"
    PR_BRANCH:                     "${PR_BRANCH}"
  trigger:
    project:                       "parity/infrastructure/ci_cd/formatter"

