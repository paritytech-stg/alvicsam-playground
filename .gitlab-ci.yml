stages:
  - build
  - test
  - deploy
  - benchmark
  - publish
  - trigger_gha

variables:
  CI_IMAGE: "paritytech/tools:latest"
  TEST_GLOBAL_VAR: "lalala"

default:
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  interruptible: true

.kubernetes-env:
  image: $CI_IMAGE
  tags:
    - kubernetes-parity-build

.test-refs:
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/ # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^gh-readonly-queue.*$/ # merge queues
    - if: $CI_COMMIT_REF_NAME =~ /^release-parachains-v[0-9]+\.[0-9]+.*$/ # i.e. v1.0, v2.1rc1

.master-refs:
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"

.build-job:
  stage: build
  extends:
    - .kubernetes-env
    - .test-refs
  variables:
    TEST_LOCAL_VAR: "ololo"
  script:
    - echo $TEST_GLOBAL_VAR
    - echo $TEST_LOCAL_VAR
    - sleep 30
    - export PRNUM=$CI_COMMIT_BRANCH
    - export BRANCHNAME=$(curl -s https://api.github.com/repos/tripleightech/alvicsam-playground/pulls/$PRNUM | jq '.head.ref')
    - echo $BRANCHNAME

.tests:
  stage: test
  extends: .kubernetes-env
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/ # PRs
    - if: $CI_COMMIT_REF_NAME == "master"
  script:
    - echo "run always (but not with tags)"
    - sleep 30

.publish-dry-run:
  stage: publish
  extends: .kubernetes-env
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/ # PRs
  script:
    - echo "run only in PR"

.publish-crate:
  stage: publish
  extends: .kubernetes-env
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^v.[0-9]+\.[0-9]+.*$/ # i.e. v.1.0, v.2.1rc1
  script:
    - echo "run only when tag/release is set"

benchmark:
  stage: benchmark
  extends:
    - .kubernetes-env
    - .master-refs
  script:
    - mkdir -p charts
    - echo '[{"name":"Sent to peers","unit":"KiB","value":'$RANDOM'},{"name":"Received from peers","unit":"KiB","value":208302.1},{"name":"test-environment","unit":"seconds","value":0.20},{"name":"availability-recovery","unit":"seconds","value":12.8}]' > charts/availability-distribution-regression-bench.json
    - echo '[{"name":"Sent to peers","unit":"KiB","value":'$RANDOM'},{"name":"Received from peers","unit":"KiB","value":407302.1},{"name":"test-environment","unit":"seconds","value":0.20},{"name":"availability-recovery","unit":"seconds","value":12.7}]' > charts/some-other-bench.json
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when: on_success
    expire_in: 1 days
    paths:
      - charts/

publish-ghpages:
  stage: publish
  variables:
    CI_IMAGE: "paritytech/tools:latest"
  extends:
    - .kubernetes-env
    - .master-refs
  needs:
    - job: benchmark
      artifacts: true
  script:
    # setup ssh
    - eval $(ssh-agent)
    - ssh-add - <<< ${GITHUB_SSH_PRIV_KEY}
    - mkdir ~/.ssh && touch ~/.ssh/known_hosts
    - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
    # Set git config
    - rm -rf .git/config
    - git config user.email "devops-team@parity.io"
    - git config user.name "${GITHUB_USER}"
    - git config remote.origin.url "git@github.com:/paritytech-stg/${CI_PROJECT_NAME}.git"
    - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
    - git fetch origin gh-pages
    # Push result to github
    - git checkout gh-pages
    - mkdir -p bench/gitlab/ || echo "Directory exists"
    - rm -rf bench/gitlab/*.json || echo "No json files"
    - cp -r charts/*.json bench/gitlab/
    - git add bench/gitlab/
    - git commit -m "Add json files with benchmark results for ${CI_COMMIT_REF_NAME}"
    - git push origin gh-pages

trigger_workflow:
  stage: trigger_gha
  extends:
    - .kubernetes-env
    - .master-refs
  needs:
    - job: publish-ghpages
      artifacts: false
    - job: benchmark
      artifacts: true
  script:
    - echo "Triggering workflow"
    - sleep 60
    - |
      for benchmark in $(ls charts/*.json); do
        export bencmark_name=$(basename $benchmark)
        echo "Benchmark: $bencmark_name"
        export benchmark_dir=$(echo $bencmark_name | sed 's/\.json//')
        curl -q -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token $GITHUB_TOKEN" \
               https://api.github.com/repos/paritytech-stg/${CI_PROJECT_NAME}/actions/workflows/benches.yml/dispatches \
                -d '{"ref":"refs/heads/master","inputs":{"benchmark-data-dir-path":"'$benchmark_dir'","output-file-path":"'$bencmark_name'"}}'
        sleep 60
      done
