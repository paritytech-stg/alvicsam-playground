stages:
  - build
  - test
  - deploy

variables:
  CI_IMAGE:                        "paritytech/tools:latest"
  TEST_GLOBAL_VAR:                 "lalala"

default:
  image:                           $CI_IMAGE
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  interruptible:                   true
  tags:
    - testlab-runner-1

.test-refs:                        &test-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs

.bench-refs:                        &bench-refs
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^some-release-v[0-9]+\.[0-9]+.*$/              # i.e. some-release-v1.0, some-release-v2.1rc1

.bench-manual-refs:                 &bench-manual-refs
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^some-release-v[0-9]+\.[0-9]+.*$/              # i.e. some-release-v1.0, some-release-v2.1rc1
      when: manual


build-job:
  stage:                           build
  <<:                              *test-refs
  variables:
    TEST_LOCAL_VAR:                "ololo"
  script:
    - echo $TEST_GLOBAL_VAR
    - echo $TEST_LOCAL_VAR
    - export PRNUM=$CI_COMMIT_BRANCH
    - export BRANCHNAME=$(curl -s https://api.github.com/repos/tripleightech/alvicsam-playground/pulls/$PRNUM | jq '.head.ref')
    - echo $BRANCHNAME

bench-build:
  stage:                           test
  <<:                              *bench-manual-refs
  variables:
    TEST_LOCAL_VAR:                "ololo"
  script:
    - echo "doing sth"

bench:
  stage:                           deploy
  <<:                              *bench-refs
  variables:
    TEST_LOCAL_VAR:                "ololo"
  script:
    - echo $CI_COMMIT_SHORT_SHA >> somefile.txt
    - export BRANCHNAME="${CI_COMMIT_BRANCH}-weights"
    # Set git config
    - rm -rf .git/config
    - git config --global user.email "${GITHUB_EMAIL}"
    - git config --global user.name "${GITHUB_USER}"
    - git config remote.origin.url "https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com:/tripleightech/${CI_PROJECT_NAME}.git"
    - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
    # push results to github
    - git checkout -b $BRANCHNAME
    - git add somefile.txt
    - git commit -m "[benchmarks] pr with wieghts"
    - git push origin $BRANCHNAME
    # create PR
    - curl -u ${GITHUB_USER}:${GITHUB_TOKEN}
      -d '{"title":"[benchmarks] Update weights","body":"This PR is generated automatically by CI.","head":"'$BRANCHNAME'","base":"'${CI_COMMIT_BRANCH}'"}'
      -X POST https://api.github.com/repos/tripleightech/${CI_PROJECT_NAME}/pulls
  after_script:
    - rm -rf .git/config
